Configuring ...
Configuring using file : ./dev/debian.i7-3687U.more.json ...
Configuring architecture features ...
Configuring cache line size with 64 ...
Configuring flop per packed SIMD with 2 ...
Configuring flop per packed SSE with 2 ...
Configuring build time ...
Configuring OMPFLAGS with -fopenmp ...
Configuring run time ...
Configuring run time with MPIRUN_OPT = --map-by core --allow-run-as-root ...
Configuring run time with OMP_PROC_BIND = TRUE ...
Configuring run time with GOMP_CPU_AFFINITY =  ...
Configuring run time with KMP_AFFINITY =  ...
Configuring with log extension = gnu ext4
Configuring plot mode ...
Configuring plot with figure width 16.0 ...
Configuring plot with figure height 10.0 ...
Configuring plot with font size 25 ...
Configuring plot with legend font size 20 ...
Configuring perf-top plot with minimum percentage 15 ...
Configuring perf-top plot with exclude filter pthread PyInt_FromLong ...
Configuring perf-report plot with minimum percentage 25 ...
Configuring benchmark mode ...
Configuring stream benchmark ...
Configuring stream2 benchmark ...
Configuring iozone benchmark ...
Configuring IOR benchmark ...
Configuring HPLinpack benchmark ...
Configuring hydro benchmark ...
Configuring NAS benchmark ...
Configuring use case mode ...
Configuring libpfm4 4.7.0 : https://sourceforge.net/projects/perfmon2/files/libpfm4/ ...
Configuring perf-report with perf-list : cpu-clock page-faults
Configuring perf-report with libpfm4 : 
Configuring perf-top with perf-list : cpu-clock cache-misses
Configuring perf-top with libpfm4 : ARITH:Umask-00 LONGEST_LAT_CACHE:MISS
Configuring perf-stat for GFlops with perf-list : 
Configuring perf-stat for GFlops with libpfm4 : ARITH:Umask-00
Configuring perf-stat for cache misses with perf-list : cache-misses L1-dcache-load-misses
Configuring perf-stat for cache misses with libpfm4 : LLC-LOAD-MISSES LLC-STORE-MISSES LLC-PREFETCH-MISSES

Downloading ...
Downloading libpfm4 ...
Downloading https://sourceforge.net/projects/perfmon2/files/libpfm4/libpfm-4.7.0.tar.gz : OK, no need to download

MLK report:
                          types |   # objects |   total size
=============================== | =========== | ============
                           list |        7093 |    725.91 KB
                            str |        7172 |    417.59 KB
                           dict |          22 |     24.02 KB
                            int |         760 |     17.81 KB
                        unicode |          74 |      7.68 KB
              method_descriptor |          12 |    864     B
             wrapper_descriptor |          10 |    800     B
          <class 'pyc.plot.plot |           8 |    512     B
  <class 'pyc.download.download |           8 |    512     B
                        weakref |           4 |    352     B
              member_descriptor |           4 |    288     B
              getset_descriptor |           4 |    288     B
                          float |           8 |    192     B
                           file |           1 |    144     B
                           code |           1 |    128     B

Checking pfaBandwidthBounded use case ...
Configuring pfaBandwidthBounded with LOGID = g++
Configuring pfaBandwidthBounded with EXE = ./pfaFlopsCacheMisses.exe
Configuring pfaBandwidthBounded with ARG = 80 1 2 2000
Configuring pfaBandwidthBounded with THD = 1 2 4
Configuring pfaBandwidthBounded with COLOR = r g b
Configuring pfaBandwidthBounded with MARKER = ^ ^ ^
Configuring pfaBandwidthBounded with LABEL = bandwidth bounded

Checking pfaComputeBounded use case ...
Configuring pfaComputeBounded with LOGID = mpic++
Configuring pfaComputeBounded with EXE = ./pfaFlopsCacheMisses.exe
Configuring pfaComputeBounded with ARG = 40 1 2 4000
Configuring pfaComputeBounded with MPI = 1 1 2 2
Configuring pfaComputeBounded with THD = 1 2 1 2
Configuring pfaComputeBounded with COLOR = r g b c
Configuring pfaComputeBounded with MARKER = x x x x
Configuring pfaComputeBounded with LABEL = compute bounded

Checking pfaPython use case ...
Configuring pfaPython with EXE = ./pfaPython.py
Configuring pfaPython with ARG = 200000000 200000000
Configuring pfaPython with COLOR = r
Configuring pfaPython with MARKER = s
Configuring pfaPython with LABEL = python script

Checking benchmarks ...
Checking stream benchmark ... OK
Checking stream2 benchmark ... OK
Checking iozone benchmark ... OK
Checking IOR benchmark ... OK
Checking HPLinpack benchmark ... OK
Checking Hydro benchmark ... OK
Checking NAS benchmark ... OK

Searching for registers with libpfm4 ...
Building libpfm4 ... OK (time =      10.852 sec)
Running libpfm4 ...
Register r530114 is mapped to ARITH:0x01
Register r10002 is mapped to LLC-LOAD-MISSES:none
Register r10202 is mapped to LLC-PREFETCH-MISSES:none
Register r10102 is mapped to LLC-STORE-MISSES:none
Register r53412e is mapped to LONGEST_LAT_CACHE:0x41

To check out perf    events, type "perf list"
To check out libpfm4 events, type "less ./tmp/libpfm-4.7.0/examples/showevtinfo.log"

Total time =      39.058 sec

MLK report:
    types |   # objects |   total size
========= | =========== | ============
     list |          12 |      1.12 KB
      str |          13 |    842     B
      int |           2 |     48     B
  unicode |           0 |     48     B

