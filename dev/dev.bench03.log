Configuring ...
Configuring using file : ./dev/debian.i7-3687U.less.json ...
Configuring architecture features ...
Configuring cache line size with 64 ...
Configuring flop per packed SIMD with 2 ...
Configuring flop per packed SSE with 2 ...
Configuring build time ...
Configuring CC with gcc ...
Configuring FC with gfortran ...
Configuring MPICC with mpicc ...
Configuring MPIF77 with mpif77 ...
Configuring MPIF90 with mpif90 ...
Configuring OMPFLAGS with -fopenmp ...
Configuring FLAGS with -O3 -funroll-loops -ffast-math -ftree-vectorize -fopt-info-optall=gnu.txt ...
Configuring NOOPTFLAGS with -O2 -mcmodel=large ...
Configuring run time ...
Configuring run time with MPIRUN_OPT = --allow-run-as-root ...
Configuring run time with OMP_PROC_BIND =  ...
Configuring run time with GOMP_CPU_AFFINITY = 0 1 2 3 ...
Configuring run time with KMP_AFFINITY =  ...
Configuring with log extension = 
Configuring plot mode ...
Configuring plot with figure width 16.0 ...
Configuring plot with figure height 10.0 ...
Configuring plot with dpi 10 ...
Configuring plot with font size 25 ...
Configuring plot with legend font size 25 ...
Configuring roof line model with xmin 0 ...
Configuring roof line model with xmax 1 ...
Configuring roof line model with ymax 9 ...
Configuring roof line model with annotation font size 15 ...
Configuring perf-report plot with minimum percentage 25 ...
Configuring plot with include log filter gnu ...
Configuring plot with exclude log filter vec ...
Configuring benchmark mode ...
Configuring stream benchmark ...
Configuring stream2 benchmark ...
Configuring iozone benchmark ...
Configuring IOR benchmark ...
Configuring HPLinpack benchmark ...
Configuring hydro benchmark ...
Configuring NAS benchmark ...
Configuring use case mode ...
Configuring libpfm4 4.7.0 : https://sourceforge.net/projects/perfmon2/files/libpfm4/ ...
Configuring perf-report with perf-list : cpu-clock
Configuring perf-report with libpfm4 : 
Configuring perf-top with perf-list : cpu-clock
Configuring perf-top with libpfm4 : ARITH:Umask-00
Configuring perf-stat for GFlops with perf-list : 
Configuring perf-stat for GFlops with libpfm4 : ARITH:Umask-00
Configuring perf-stat for cache misses with perf-list : cache-misses
Configuring perf-stat for cache misses with libpfm4 : LLC-LOAD-MISSES

Downloading ...
Downloading iozone ...
Downloading http://www.iozone.org/src/current/iozone3_457.tar : OK, no need to download

MLK report:
                          types |   # objects |   total size
=============================== | =========== | ============
                           list |        7091 |    725.62 KB
                            str |        7170 |    417.49 KB
                           dict |          20 |     21.97 KB
                            int |         760 |     17.81 KB
                        unicode |          69 |      7.29 KB
              method_descriptor |          12 |    864     B
             wrapper_descriptor |          10 |    800     B
          <class 'pyc.plot.plot |           7 |    448     B
  <class 'pyc.download.download |           7 |    448     B
                        weakref |           4 |    352     B
              member_descriptor |           4 |    288     B
                          float |          12 |    288     B
              getset_descriptor |           4 |    288     B
                           file |           1 |    144     B
                           code |           1 |    128     B

Looking for compilers ...
CC = /usr/bin/gcc
FC = /usr/bin/gfortran
MPICC = /usr/bin/mpicc
MPIF77 = /usr/bin/mpif77
MPIF90 = /usr/bin/mpif90
MPIFC = /usr/bin/mpif90
OMPFLAGS = -fopenmp
FLAGS = -O3 -funroll-loops -ffast-math -ftree-vectorize -fopt-info-optall=gnu.txt -fopenmp
NOOPTFLAGS = -O2 -mcmodel=large
LINKFLAGS = -mcmodel=large -fopenmp

Benchmarking iozone ...
Checking iozone benchmark ... OK
Building iozone ... OK (time =       0.091 sec)
Running iozone ...
Running iozone.size=104.MinSz=104.MaxSz=104.MinRec=1.MaxRec=128.n=1.t=1.less.long.log ... OK (time =       3.180 sec)
Running iozone.size=104.MinSz=104.MaxSz=104.MinRec=1.MaxRec=128.n=1.t=2.less.long.log ... OK (time =       3.055 sec)

Analysing benchmark logs ...
Analysing    iozone: maximum =    4165.951    MB/s, iozone.size=1048.MinSz=1048.MaxSz=1048.MinRec=1.MaxRec=128.n=1.t=4.gnu.ext4.less.quick.log
                                                    file size = 1 MB, record size = 64 kB, step = reread

Total time =      32.712 sec

MLK report:
    types |   # objects |   total size
========= | =========== | ============
  unicode |          30 |      3.37 KB
     list |          18 |      1.88 KB
      str |          12 |    770     B
      int |           2 |     48     B

